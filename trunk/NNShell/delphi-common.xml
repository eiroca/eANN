<project name="delphi" default="build" basedir=".">

  <target name="add_dir">
    <echo>Adding ${inPath} to ${zipPath}</echo>
    <zip destfile="${zipPath}" update="true">
      <zipfileset dir="${inPath}" prefix="${prefix}">
        <exclude name="**/.svn" />
        <exclude name="**/__history" />
      </zipfileset>
    </zip>
  </target>

  <target name="add_src">
    <echo>Adding ${inPath} to ${zipPath}</echo>
    <zip destfile="${zipPath}" update="true">
      <zipfileset dir="${inPath}" prefix="${prefix}">
        <exclude name="**/.svn" />
        <exclude name="**/__history" />
        <exclude name="*.dproj*" />
        <exclude name="*.identcache" />
        <exclude name="*.res" />
      </zipfileset>
    </zip>
  </target>

  <target name="add_bin">
    <echo>Adding ${inPath} to ${zipPath}</echo>
    <zip destfile="${zipPath}" update="true">
      <zipfileset dir="${inPath}" prefix="${prefix}">
        <exclude name="*dunit.ini" />
        <exclude name="*.drc" />
        <exclude name="*.ini" />
        <exclude name="*.INI" />
        <exclude name="**data" />
      </zipfileset>
    </zip>
  </target>

  <target name="build">
    <echo>Building... ${what} (${ver})</echo>
    <property name="distname" location="${dest}/${what}-${ver}.zip" />
    <property name="zipPath" value="${distname}" />
    <mkdir dir="${dest}" />
    <delete file="${distname}" />
    <antcall target="delphi.add_bin">
      <param name="inPath" value="${base}/bin" />
      <param name="prefix" value="" />
    </antcall>
    <antcall target="delphi.add_src">
      <param name="inPath" value="${base}/src" />
      <param name="prefix" value="src" />
    </antcall>
    <antcall target="delphi.add_dir">
      <param name="inPath" value="${base}/data" />
      <param name="prefix" value="data" />
    </antcall>
    <antcall target="delphi.add_dir">
      <param name="inPath" value="${base}/desc" />
      <param name="prefix" value="" />
    </antcall>
  </target>

</project>
